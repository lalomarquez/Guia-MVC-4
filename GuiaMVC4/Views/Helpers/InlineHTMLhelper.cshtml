@using GuiaMVC4.Models
@using GuiaMVC4.CustomHTMLHelpers
@model GuiaMVC4.Models.Student

@{
    Layout = null;
    ViewBag.Title = "Tipos de HTML Helper";
}

@helper OrderedList(string[] words)
{
    <ol>
        @foreach (string word in words)
        {
            <li>@word</li>
        }
    </ol>
}

@helper Retrieve_div(string content)
{
    <div style="background-color:lightgrey;height:80px;width:500px">
        <mark>
            <label style="font-size:large;font-family:Arial">
                @content
            </label>
        </mark>
    </div>
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
</head>
<body>
    <div>
        <h1>Inline HTML helper</h1>
        @OrderedList(new string[] { "Delhi", "Punjab", "Assam", "Bihar" })

        <hr />

        <h1>Custom HTML helper</h1>
        <h2>A) Using static methods</h2>
        @CustomHelper.Image("/Images/user.png", "UserPic", "100", "100")

        <h2>B) Using Extension methods</h2>
        @Html.Image_HtmlHelper("/Images/user.png", "UserPic", "100", "100")

        <h2>C) Using the @@helper</h2>
        @Retrieve_div(@"Este es un nuevo HTML Helper using the @helper")

        <hr />

        <h1>Built-In HTML helper</h1>
        <h2>A) Standard HTML helper</h2>

        @*Para los Formularios*@

        @*@{Html.BeginForm("InlineHTMLhelper", "HelpersController", FormMethod.Post);
          Html.EndForm();
        }*@

        @*o implementa la interfaz IDisposable*@

        @using (Html.BeginForm("InlineHTMLhelper", "HelpersController", FormMethod.Post))
        {
            
        }

        <strong>TextBox: </strong>
        @Html.TextBox("myTextBox", "", new { @class = "form-control", @placeholder = "Input text" })
        
        <br />
        <strong>TextArea: </strong>        
        @Html.TextArea("txtComments", "", htmlAttributes: new { @style = "width: 450px;", @placeholder = "Enter Comments here" })

        <br />
        <strong>CheckBox: </strong>        
        @Html.CheckBox("isNewlyEnrolled", true)

        <br />
        <strong>RadioButton: </strong>        
        Male:   @Html.RadioButton("Gender", "Male")
        Female: @Html.RadioButton("Gender", "Female")

        <br />
        <strong>DropDownList: </strong>        
        @Html.DropDownList("Country", 
        new List<SelectListItem>{
            new SelectListItem{Text = "Monterrey", Value= "0"},
            new SelectListItem{Text = "Guadalajara", Value= "1"},
            new SelectListItem{Text = "Tampico", Value= "2"}
        })

        <br />
        <strong>Password: </strong>        
        @Html.Password("OnlinePassword")

        <br />
        <strong>Hidden: </strong>
        @Html.Hidden("idHidden")

        <br />
        <strong>Label: </strong>
        @Html.Label("Nombre", "mi texto")

        <br />
        <strong>ListBox: </strong>        
        @Html.ListBox("ListBox1", new MultiSelectList(new [] {"Cricket", "Chess", "otro", "etc"})) 

        <h2>B) Strongly typed HTML helper</h2>

        <strong>TextBoxFor: </strong>
        @Html.TextBoxFor(m => m.StudentName, new { @class = "form-control", @placeholder = "Input text" })

        <br />
        <strong>TextAreaFor: </strong>
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })

        <br />
        <strong>CheckBoxFor: </strong>
        @Html.CheckBoxFor(m => m.isNewlyEnrolled)

        <br />
        <strong>RadioButtonFor: </strong>
        Hombre:   @Html.RadioButtonFor(m => m.Gender, "Male")
        Mujer:   @Html.RadioButtonFor(m => m.Gender, "Female")

        <br />
        <strong>DropDownListFor: </strong>
        @Html.DropDownListFor(m => m.StudentGender,
                    new SelectList(Enum.GetValues(typeof(Gender))),
                    "Select Gender")

        <br />
        <strong>LabelFor: </strong>
        @Html.LabelFor(m => m.StudentName)

        <br />
        <strong>PasswordFor: </strong>
        @Html.PasswordFor(m => m.Password)

        <br />
        <strong>HiddenFor: </strong>
        @Html.HiddenFor(m => m.StudentId)

        <br />
        <strong>DisplayFor: </strong>
        @Html.DisplayFor(m => m.StudentName)


        <h2>C) Template HTML helper</h2>

        <hr />
    </div>
</body>
</html>
